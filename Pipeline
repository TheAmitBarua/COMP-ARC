IR → Mem [PC] ;
PC → PC + 4 ; 
A → Regs [IR6,  10] ;
B → Regs [IR11, ...,  15] ;
Immediate → (IR16)16## (IR16, ..., 31)
Memory ref:   ALUoutput  →  A + Immediate ;
Reg-Reg ALU:  ALU  →  A func B ;
Reg-Imm ALU:  ALUoutput  →  A op Immediate ;
Branch:       ALUoutput  →  PC + Immediate;  Cond * (A op 0) 
Memory ref:  LMD  →  Mem [ALUoutput]  or Mem (ALUoutput)  →  B
Branch:      if (cond) PC  →  ALUoutput 
Reg-Reg ALU:   Regs [R16, ...., 20]  →  ALUoutput ;
Reg-Imm ALU:   Regs [R11, ..., 15] → ALUoutput ;
Reg-Reg ALU:   Regs [R11, ...., 15]  →  LMD ;

lw   $10, 20($1)
sub  $11, $2, $3
add  $12, $3, $4
lw   $13, 24($1)
add  $14, $5, $6
